colnum <- 17
}
else if (outcome == "pneumonia"){
colnum <- 23
}
else{
stop("invalid outcome")
}
##determing the coloum
outcome_data1 <- subset(outcome_data, outcome_data[,colnum]!= "Not Available")
##omit the NA value for the next length function,
##notice that here it used "Not Available" rather than NA
if (num == "best"){
rank <- 1
}
else if (num == "worst"){
rank <- length(outcome_data1[,colnum])
}
else if (num > nrow(outcome_data1)){
return(NA)
}
else{
rank <- 1:num
}
hos_num <- sort(as.numeric(outcome_data1[,colnum]))
hos_name <- subset(outcome_data1,
as.numeric(outcome_data1[,colnum]) == hos_num[rank])
##death rate has to be numeric
rankdata <- data.frame(hospital=hos_name[,2], state=hos_name[,7])
return(rank)
return(rankdata) ##If 2 value exist, just return the first
}
head(rankall("heart attack", 20), 10)
rankall("heart attack", 20)
rankall <- function(outcome, num = "best"){
outcome_data <- read.csv("outcome-of-care-measures.csv", colClasses="character")
if (outcome == "heart attack"){
colnum <- 11
}
else if (outcome == "heart failure"){
colnum <- 17
}
else if (outcome == "pneumonia"){
colnum <- 23
}
else{
stop("invalid outcome")
}
##determing the coloum
outcome_data1 <- subset(outcome_data, outcome_data[,colnum]!= "Not Available")
##omit the NA value for the next length function,
##notice that here it used "Not Available" rather than NA
if (num == "best"){
rank <- 1
}
else if (num == "worst"){
rank <- length(outcome_data1[,colnum])
}
else if (num > nrow(outcome_data1)){
return(NA)
}
else{
rank <- 1:num
}
hos_num <- sort(as.numeric(outcome_data1[,colnum]))
hos_name <- subset(outcome_data1,
as.numeric(outcome_data1[,colnum]) == hos_num[rank])
##death rate has to be numeric
rankdata <- data.frame(hospital=hos_name[,2], state=hos_name[,7])
return(hos_name)
return(rankdata) ##If 2 value exist, just return the first
}
rankall("heart attack", 20)
rankall <- function(outcome, num = "best"){
outcome_data <- read.csv("outcome-of-care-measures.csv", colClasses="character")
if (outcome == "heart attack"){
colnum <- 11
}
else if (outcome == "heart failure"){
colnum <- 17
}
else if (outcome == "pneumonia"){
colnum <- 23
}
else{
stop("invalid outcome")
}
##determing the coloum
outcome_data1 <- subset(outcome_data, outcome_data[,colnum]!= "Not Available")
##omit the NA value for the next length function,
##notice that here it used "Not Available" rather than NA
if (num == "best"){
rank <- 1
}
else if (num == "worst"){
rank <- length(outcome_data1[,colnum])
}
else if (num > nrow(outcome_data1)){
return(NA)
}
else{
rank <- 1:num
}
hos_num <- sort(as.numeric(outcome_data1[,colnum]))
hos_name <- subset(outcome_data1,
as.numeric(outcome_data1[,colnum]) == hos_num[rank])
##death rate has to be numeric
rankdata <- data.frame(hospital=hos_name[,2], state=hos_name[,7])
return(hos_num)
return(rankdata) ##If 2 value exist, just return the first
}
rankall("heart attack", 20)
rankall <- function(outcome, num = "best"){
outcome_data <- read.csv("outcome-of-care-measures.csv", colClasses="character")
if (outcome == "heart attack"){
colnum <- 11
}
else if (outcome == "heart failure"){
colnum <- 17
}
else if (outcome == "pneumonia"){
colnum <- 23
}
else{
stop("invalid outcome")
}
##determing the coloum
outcome_data1 <- subset(outcome_data, outcome_data[,colnum]!= "Not Available")
##omit the NA value for the next length function,
##notice that here it used "Not Available" rather than NA
if (num == "best"){
rank <- 1
}
else if (num == "worst"){
rank <- length(outcome_data1[,colnum])
}
else if (num > nrow(outcome_data1)){
return(NA)
}
else{
rank <- 1:num
}
hos_num <- sort(as.numeric(outcome_data1[,colnum]))
hos_name <- subset(outcome_data1,
as.numeric(outcome_data1[,colnum]) == hos_num[rank])
##death rate has to be numeric
rankdata <- data.frame(hospital=hos_name[,2], state=hos_name[,7])
return(hos_num[rank])
return(rankdata) ##If 2 value exist, just return the first
}
rankall("heart attack", 20)
rankall <- function(outcome, num = "best"){
outcome_data <- read.csv("outcome-of-care-measures.csv", colClasses="character")
if (outcome == "heart attack"){
colnum <- 11
}
else if (outcome == "heart failure"){
colnum <- 17
}
else if (outcome == "pneumonia"){
colnum <- 23
}
else{
stop("invalid outcome")
}
##determing the coloum
outcome_data1 <- subset(outcome_data, outcome_data[,colnum]!= "Not Available")
##omit the NA value for the next length function,
##notice that here it used "Not Available" rather than NA
if (num == "best"){
rank <- 1
}
else if (num == "worst"){
rank <- length(outcome_data1[,colnum])
}
else if (num > nrow(outcome_data1)){
return(NA)
}
else{
rank <- 1:num
}
hos_num <- sort(as.numeric(outcome_data1[,colnum]))
for (i in 1:num){
hos_name <- subset(outcome_data1,
as.numeric(outcome_data1[,colnum]) == hos_num[i])
##death rate has to be numeric
rankdata <- data.frame(hospital=NA, state=NA)
rankdata <- rbind(hospital=hos_name[i,2], state=hos_name[i,7])
}
return(rankdata)
}
rankall("heart attack", 20)
rankall <- function(outcome, num = "best"){
outcome_data <- read.csv("outcome-of-care-measures.csv", colClasses="character")
if (outcome == "heart attack"){
colnum <- 11
}
else if (outcome == "heart failure"){
colnum <- 17
}
else if (outcome == "pneumonia"){
colnum <- 23
}
else{
stop("invalid outcome")
}
##determing the coloum
outcome_data1 <- subset(outcome_data, outcome_data[,colnum]!= "Not Available")
##omit the NA value for the next length function,
##notice that here it used "Not Available" rather than NA
if (num == "best"){
rank <- 1
}
else if (num == "worst"){
rank <- length(outcome_data1[,colnum])
}
else if (num > nrow(outcome_data1)){
return(NA)
}
else{
rank <- 1:num
}
hos_num <- sort(as.numeric(outcome_data1[,colnum]))
for (i in 1:num){
hos_name <- subset(outcome_data1,
as.numeric(outcome_data1[,colnum]) == hos_num[i])
##death rate has to be numeric
hopital <- rbind(hos_name[i,2])
state <- rbind(hos_name[i,7])
}
rankdata <- data.frame(hospital, state)
return(rankdata)
}
rankall("heart attack", 20)
rankall <- function(outcome, num = "best"){
outcome_data <- read.csv("outcome-of-care-measures.csv", colClasses="character")
if (outcome == "heart attack"){
colnum <- 11
}
else if (outcome == "heart failure"){
colnum <- 17
}
else if (outcome == "pneumonia"){
colnum <- 23
}
else{
stop("invalid outcome")
}
##determing the coloum
outcome_data1 <- subset(outcome_data, outcome_data[,colnum]!= "Not Available")
##omit the NA value for the next length function,
##notice that here it used "Not Available" rather than NA
if (num == "best"){
rank <- 1
}
else if (num == "worst"){
rank <- length(outcome_data1[,colnum])
}
else if (num > nrow(outcome_data1)){
return(NA)
}
else{
rank <- 1:num
}
hos_num <- sort(as.numeric(outcome_data1[,colnum]))
for (i in 1:num){
hos_name <- subset(outcome_data1,
as.numeric(outcome_data1[,colnum]) == hos_num[i])
##death rate has to be numeric
hospital <- vector()
state <- vector()
hopital <- rbind(hos_name[i,2])
state <- rbind(hos_name[i,7])
}
rankdata <- data.frame(hospital, state)
return(rankdata)
}
rankall("heart attack", 20)
rankall <- function(outcome, num = "best"){
outcome_data <- read.csv("outcome-of-care-measures.csv", colClasses="character")
if (outcome == "heart attack"){
colnum <- 11
}
else if (outcome == "heart failure"){
colnum <- 17
}
else if (outcome == "pneumonia"){
colnum <- 23
}
else{
stop("invalid outcome")
}
##determing the coloum
outcome_data1 <- subset(outcome_data, outcome_data[,colnum]!= "Not Available")
##omit the NA value for the next length function,
##notice that here it used "Not Available" rather than NA
if (num == "best"){
rank <- 1
}
else if (num == "worst"){
rank <- length(outcome_data1[,colnum])
}
else if (num > nrow(outcome_data1)){
return(NA)
}
else{
rank <- 1:num
}
hos_num <- sort(as.numeric(outcome_data1[,colnum]))
for (i in 1:num){
hos_name <- subset(outcome_data1,
as.numeric(outcome_data1[,colnum]) == hos_num[i])
##death rate has to be numeric
hospital <- vector()
state <- vector()
hopital <- rbind(hos_name[i,2])
state <- rbind(hos_name[i,7])
}
return(hospital, state)
##rankdata <- data.frame(hospital, state)
##return(rankdata)
}
rankall("heart attack", 20)
rankall <- function(outcome, num = "best"){
outcome_data <- read.csv("outcome-of-care-measures.csv", colClasses="character")
if (outcome == "heart attack"){
colnum <- 11
}
else if (outcome == "heart failure"){
colnum <- 17
}
else if (outcome == "pneumonia"){
colnum <- 23
}
else{
stop("invalid outcome")
}
##determing the coloum
outcome_data1 <- subset(outcome_data, outcome_data[,colnum]!= "Not Available")
##omit the NA value for the next length function,
##notice that here it used "Not Available" rather than NA
if (num == "best"){
rank <- 1
}
else if (num == "worst"){
rank <- length(outcome_data1[,colnum])
}
else if (num > nrow(outcome_data1)){
return(NA)
}
else{
rank <- 1:num
}
hos_num <- sort(as.numeric(outcome_data1[,colnum]))
for (i in 1:num){
hos_name <- subset(outcome_data1,
as.numeric(outcome_data1[,colnum]) == hos_num[i])
##death rate has to be numeric
hospital <- vector()
state <- vector()
hopital <- rbind(hos_name[i,2])
state <- rbind(hos_name[i,7])
}
return(hospital)
##rankdata <- data.frame(hospital, state)
##return(rankdata)
}
rankall("heart attack", 20)
rankall <- function(outcome, num = "best"){
outcome_data <- read.csv("outcome-of-care-measures.csv", colClasses="character")
if (outcome == "heart attack"){
colnum <- 11
}
else if (outcome == "heart failure"){
colnum <- 17
}
else if (outcome == "pneumonia"){
colnum <- 23
}
else{
stop("invalid outcome")
}
##determing the coloum
outcome_data1 <- subset(outcome_data, outcome_data[,colnum]!= "Not Available")
##omit the NA value for the next length function,
##notice that here it used "Not Available" rather than NA
if (num == "best"){
rank <- 1
}
else if (num == "worst"){
rank <- length(outcome_data1[,colnum])
}
else if (num > nrow(outcome_data1)){
return(NA)
}
else{
rank <- 1:num
}
hos_num <- sort(as.numeric(outcome_data1[,colnum]))
for (i in 1:num){
hos_name <- subset(outcome_data1,
as.numeric(outcome_data1[,colnum]) == hos_num[i])
##death rate has to be numeric
hospital <- vector()
state <- vector()
hopital <- rbind(hos_name[i,2])
state <- rbind(hos_name[i,7])
}
return(state)
##return(hospital)
##rankdata <- data.frame(hospital, state)
##return(rankdata)
}
rankall("heart attack", 20)
rankall <- function(outcome, num = "best"){
outcome_data <- read.csv("outcome-of-care-measures.csv", colClasses="character")
if (outcome == "heart attack"){
colnum <- 11
}
else if (outcome == "heart failure"){
colnum <- 17
}
else if (outcome == "pneumonia"){
colnum <- 23
}
else{
stop("invalid outcome")
}
##determing the coloum
outcome_data1 <- subset(outcome_data, outcome_data[,colnum]!= "Not Available")
##omit the NA value for the next length function,
##notice that here it used "Not Available" rather than NA
if (num == "best"){
rank <- 1
}
else if (num == "worst"){
rank <- length(outcome_data1[,colnum])
}
else if (num > nrow(outcome_data1)){
return(NA)
}
else{
rank <- 1:num
}
hos_num <- sort(as.numeric(outcome_data1[,colnum]))
for (i in 1:num){
hos_name[i] <- subset(outcome_data1,
as.numeric(outcome_data1[,colnum]) == hos_num[i])
##death rate has to be numeric
hospital <- vector()
state <- vector()
hopital <- rbind(hos_name[i,2])
state <- rbind(hos_name[i,7])
}
return(state)
##return(hospital)
##rankdata <- data.frame(hospital, state)
##return(rankdata)
}
rankall("heart attack", 20)
rankall <- function(outcome, num = "best"){
outcome_data <- read.csv("outcome-of-care-measures.csv", colClasses="character")
if (outcome == "heart attack"){
colnum <- 11
}
else if (outcome == "heart failure"){
colnum <- 17
}
else if (outcome == "pneumonia"){
colnum <- 23
}
else{
stop("invalid outcome")
}
##determing the coloum
outcome_data1 <- subset(outcome_data, outcome_data[,colnum]!= "Not Available")
##omit the NA value for the next length function,
##notice that here it used "Not Available" rather than NA
if (num == "best"){
rank <- 1
}
else if (num == "worst"){
rank <- length(outcome_data1[,colnum])
}
else if (num > nrow(outcome_data1)){
return(NA)
}
else{
rank <- 1:num
}
hos_num <- sort(as.numeric(outcome_data1[,colnum]))
for (i in 1:num){
hos_name <- outcome_data1
hos_name[i] <- subset(outcome_data1,
as.numeric(outcome_data1[,colnum]) == hos_num[i])
##death rate has to be numeric
hospital <- vector()
state <- vector()
hopital <- rbind(hos_name[i,2])
state <- rbind(hos_name[i,7])
}
return(state)
##return(hospital)
##rankdata <- data.frame(hospital, state)
##return(rankdata)
}
rankall("heart attack", 20)
?aggregate
submit()
submit()
submit()
submit()
